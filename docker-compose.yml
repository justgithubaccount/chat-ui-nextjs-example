services:
  postgres:
    image: postgres:16-alpine
    container_name: chat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-chatuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-chatdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatuser -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-nextjs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      # Router configuration
      - traefik.http.routers.nextjs.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.nextjs.tls=true
      - traefik.http.routers.nextjs.entrypoints=web,websecure
      - traefik.http.routers.nextjs.tls.certresolver=mytlschallenge
      # Service configuration
      - traefik.http.services.nextjs.loadbalancer.server.port=3000
      # Headers middleware
      - traefik.http.middlewares.nextjs.headers.SSLRedirect=true
      - traefik.http.middlewares.nextjs.headers.STSSeconds=315360000
      - traefik.http.middlewares.nextjs.headers.browserXSSFilter=true
      - traefik.http.middlewares.nextjs.headers.contentTypeNosniff=true
      - traefik.http.middlewares.nextjs.headers.forceSTSHeader=true
      - traefik.http.middlewares.nextjs.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.nextjs.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.nextjs.headers.STSPreload=true
      # Apply middleware
      - traefik.http.routers.nextjs.middlewares=nextjs@docker
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-chatuser}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-chatdb}
      NEXTAUTH_URL: https://${SUBDOMAIN}.${DOMAIN_NAME}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GITHUB_ID: ${GITHUB_ID}
      GITHUB_SECRET: ${GITHUB_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com/v1}
      UPLOAD_DIR: ${UPLOAD_DIR:-/app/public/uploads}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      NODE_ENV: production
    volumes:
      - uploads_data:/app/public/uploads

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
