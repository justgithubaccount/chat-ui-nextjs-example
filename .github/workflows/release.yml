name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma Client
      run: npm run db:generate

    - name: Build application
      run: npm run build
      env:
        SKIP_ENV_VALIDATION: true

    - name: Create Release Archive
      run: |
        tar -czf release-${{ github.ref_name }}.tar.gz \
          .next \
          public \
          prisma \
          package.json \
          package-lock.json \
          next.config.js \
          tsconfig.json

    - name: Generate Changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## What's Changed
          ${{ steps.changelog.outputs.CHANGELOG }}

          ## Installation

          1. Download the release archive
          2. Extract the contents
          3. Install dependencies: `npm install`
          4. Set up your environment variables
          5. Run database migrations: `npm run db:migrate`
          6. Start the application: `npm start`

          ## Docker

          Pull the Docker image:
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```

          ---
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...${{ github.ref_name }}
        files: |
          release-${{ github.ref_name }}.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}